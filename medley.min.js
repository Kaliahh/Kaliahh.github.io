async function setup(){createCanvas(windowWidth,windowHeight),start=millis(),isShuffling=!0,textSize(width/40),runningAlgortihm="",values=[],size=width/50,pause=500,p=floor(width/size),osc1=new p5.Oscillator("sine"),osc1.amp(.1),osc2=new p5.Oscillator("triangle"),osc2.amp(.1);for(let e=0;e<p;e++)values.push(new Rectangle(map(e,0,p-1,p/3,height)));modifiers={"Fast Bubble":.5,Gnome:.25,Heap:1,Insertion:.25,Merge:15,OddEven:.5,Quick:3,Selection:3,Shell:1,Cycle:1};let e=[async()=>{runningAlgortihm="Merge",await MergeSort(values,0,values.length-1)},async()=>{runningAlgortihm="Quick",await QuickSort(values,0,values.length-1)},async()=>{runningAlgortihm="Fast Bubble",await BubbleSort(values)},async()=>{runningAlgortihm="Heap",await HeapSort(values)},async()=>{runningAlgortihm="Insertion",await InsertionSort(values)},async()=>{runningAlgortihm="Selection",await SelectionSort(values)},async()=>{runningAlgortihm="Shell",await ShellSort(values)},async()=>{runningAlgortihm="OddEven",await OddEvenSort(values)}];for(;;){await shuffleArray(e);for(let n=0;n<e.length;n++)isShuffling=!0,await shuffleArray(values),isShuffling=!1,start=millis(),await e[n](),end=millis(),await sleep(pause)}}function draw(){background(51);for(let e=0;e<values.length;e++)stroke(0),fill(values[e].color),rect(e*size,height-values[e].value,size-1,values[e].value)}async function swap(e,n,t){setFreq(osc1,t),setFreq(osc2,n),isShuffling?await sleep(20):await sleep20();let i=e[n];e[n]=e[t],e[t]=i}async function shuffleArray(e){for(var n=e.length-1;n>0;n--){let t=getRandomInt(0,e.length);await swap(e,n,t)}}function getRandomInt(e,n){return e=Math.ceil(e),n=Math.floor(n),Math.floor(Math.random()*(n-e)+e)}function sleep20(){return new Promise(e=>setTimeout(e,20*modifiers[runningAlgortihm]))}function sleep2(){return new Promise(e=>setTimeout(e,2*modifiers[runningAlgortihm]))}function sleep(e){return new Promise(n=>setTimeout(n,e))}function setFreq(e,n){let t=map(values[n].value,p/3,height,100,500);e.freq(t,.05)}